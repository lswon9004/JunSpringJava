<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
   					http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/context 
                  http://www.springframework.org/schema/context/spring-context.xsd
                  http://www.springframework.org/schema/aop 
                  http://www.springframework.org/schema/aop/spring-aop.xsd">
 <context:component-scan base-package="spring.aop"/>
 <aop:aspectj-autoproxy/> 
<!--	<bean id="greeting" class="spring.aop.GreetingServiceImpl" p:greeting="안녕하세요"/>
	<bean id="logAspect" class="spring.aop.LogAspect"/>
	<bean id="performanceAspect" class="spring.aop.PerformanceAspect"/>
	<aop:config>
		  <aop:pointcut id="publicmethod" expression="execution(public * *(..))"/>
      
      <aop:aspect ref="logAspect">
         <aop:before pointcut-ref="publicmethod" method="beforeLogging" />
         <aop:after-returning pointcut-ref="publicmethod" method="afterLogging"
         returning="returnValue"/>
         <aop:after-throwing pointcut-ref="publicmethod" method="throwingLogging"
         throwing="ex"/>
         <aop:after pointcut-ref="publicmethod" method="alwaysLogging"/>
      </aop:aspect>
      <aop:aspect ref="performanceAspect">
		<aop:around pointcut="execution(public * *(..))" method="timeCheck"/>
	  </aop:aspect>
	</aop:config>-->
</beans>